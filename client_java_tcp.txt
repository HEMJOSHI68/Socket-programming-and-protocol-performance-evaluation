// Java program to illustrate Client Side Programming
// for Simple Calculator using TCP
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;
import jdk.nashorn.internal.ir.CatchNode;
import java.util.StringTokenizer;
import sun.security.util.Length;

 
public class Calc_Client
{
    public static void main(String[] args) throws IOException
    {
        InetAddress ip = InetAddress.getLocalHost();
        int port = 4444;
        Scanner sc = new Scanner(System.in);
 
        // Step 1: Open the socket connection.
        Socket s = new Socket(ip, port);
 
        // Step 2: Communication-get the input and output stream
        DataInputStream dis = new DataInputStream(s.getInputStream());
        DataOutputStream dos = new DataOutputStream(s.getOutputStream());
        
        try 
        {
        String user_ip_address;
	Scanner sc1=new Scanner(s.getInputStream());
	System.out.println("Enter server name or IP address");
	user_ip_address=sc.next();
        
        if(user_ip_address.equals("Localhost")|| user_ip_address.equals("127.0.0.1"))
        {   
            try 
            {  
                 // Taking input Port number 
		    	String user_Port;
                        Scanner sc2=new Scanner(s.getInputStream());
		    	System.out.println("Enter Port");
		    	user_Port=sc.next();
                        
            if(user_Port.equals("4444"))
            {
                try {
                    
              
              DataInputStream dis1 = new DataInputStream(s.getInputStream());
              DataOutputStream dos1 = new DataOutputStream(s.getOutputStream());
            // Enter the equation in the form-
            // "operand1 operation operand2"
            Scanner sc3 = new Scanner(System.in);
            System.out.println("Enter expression ");
            
            String inp = sc3.nextLine();
 
            // send the equation to server
            dos1.writeUTF(inp);
 
            // wait till request is processed and sent back to client
            String ans = dis1.readUTF();
            System.out.println("Answer=" + ans);
            
            for(int i=0; i<Integer.parseInt(ans);i++)
            {
                System.out.println("Socket Programming");
                            
            }
            
            
            
            } catch (Exception e) {
         System.out.println("not functioning ");
            }
        
            }else {
         System.out.print("invalid port");
        }  
        }  catch (Exception e) {
         System.out.println("invalid port: ");
         
         }
        }
        else {
         System.out.print("Could not connect to server");
        }
        }
         catch (Exception e) {
         System.out.println("Could not connect to server. Terminating: ");
         
         }
    }} 

